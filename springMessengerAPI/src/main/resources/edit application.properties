#To get this app to run - rename this file to application.properties
#1. fill out spring.datasource.url
#2. fill out spring.datasource.username and pring.datasource.password=
#3. set dir for high and low res images app.upload-full-res.dir and app.upload-low-res.dir


spring.datasource.url=jdbc:postgresql://localhost:5432/messengerdata -- example
spring.datasource.username={username}
spring.datasource.password={password}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto = none

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.hibernate.show-sql= true

#Turn off spring naming convention - puts underscores between words when querying tables
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


# Service account location. Can be a filesystem path or a classpath resource. NB: Generate and use your own firebase-service-account.json file.
gcp.firebase.service-account=classpath:firebase-service-account.json

#Enable liquibase and set its location
spring.liquibase.change-log=classpath:db/master.xml
spring.liquibase.enabled=true



#Configure to be visible on local network
server.address=0.0.0.0

#Port the api is visible on
server.port=8000

app.upload-full-res.dir={dir to high res}
app.upload-low-res.dir={dir to low res}

#SSL properties
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore/keystore.p12
# The password used to generate the certificate
server.ssl.key-store-password={password}
# The alias mapped to the certificate
server.ssl.key-alias=tomcat

server.ssl.enabled=true

#Firewall instructions Windows 10 to allow incoming requests

#To allow incoming traffic on a specific port in Windows 10, you can follow these steps:
#
#Open Windows Defender Firewall by searching for it in the Start menu and clicking on it.
#
#Click on "Advanced settings" in the left-hand menu.
#
#In the Windows Defender Firewall with Advanced Security window, click on "Inbound Rules" in the left-hand menu.
#
#Click on "New Rule..." in the right-hand menu.
#
#In the New Inbound Rule Wizard, select "Port" and click "Next".
#
#Select "TCP" and enter the port number that you want to allow incoming traffic on. If you want to allow traffic on all ports, select "All local ports". Click "Next".
#
#Select "Allow the connection" and click "Next".
#
#Choose which network location types you want the rule to apply to, and click "Next".
#
#Enter a name and description for the rule (optional), and click "Finish".
